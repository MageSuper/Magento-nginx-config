   ## Maps config file
   include conf_m2/maps.conf;

   ## certbot-auto renew webroot
#  server {
#    listen 80;
#    server_name example.com;
#
#    location ~ /\.well-known/acme-challenge {
#        root $MAGE_ROOT/pub;
#    }
#
#    location / {
#         return 301 https://example.com$request_uri;
#    }
#  }

   ## Proxy server to terminate ssl before varnish
#  include conf_m2/sslproxy.conf;

  server {
   listen 80 reuseport;
#  listen 127.0.0.1:8080;
   server_name example.com;
 
   access_log  /var/log/nginx/access.log  main;
   error_log   /var/log/nginx/error.log  error;
	
   if ($bad_client) { return 403; }
	
   ## Set Magento root folder
   set $MAGE_ROOT /var/www/html;
   ## Set main public directory /pub
   root $MAGE_ROOT/pub;
	
   ## phpMyAdmin configuration
   include conf_m2/phpmyadmin.conf;
	
   ## Nginx and php-fpm status
   include conf_m2/status.conf;
    
   ## Server maintenance block.
#  include conf_m2/maintenance.conf;
	
   ## Magento Setup Tool
   include conf_m2/setup.conf;
   
   ## Wordpress STARTS
   location @wp {
   	rewrite ^/wp(.*) /wp/index.php?q=$1;
   }

   location ^~ /wp {
   	root $MAGE_ROOT;
   	index index.php index.html index.htm;
   	try_files $uri $uri/ @wp;

   location ~ \.php$ {
   	include fastcgi_params;
   	fastcgi_param SCRIPT_FILENAME $request_filename;
   	fastcgi_pass ${MAGE_PHP_ROUTE};
   	}
   }
   ## Wordpress ENDS
	
   ## Deny all internal locations
   location ~ ^/(app|generated|lib|bin|var|tmp|phpserver|vendor)/ { 
     deny all; 
   }
	   
   location / {
     try_files $uri $uri/ /index.php$is_args$args;
   }
	
   ## Error log/page
#  include conf_m2/error_page.conf;
	
   ## Static location
   include conf_m2/assets.conf;
  
   ## Protect extra directories
   include conf_m2/extra_protect.conf;
	   
   ## Process php files (strict rule, define files to be executed)
   location ~ ^/(index|health_check|get|static|errors/(report|404|503))\.php$ {
     try_files $uri =404;
#    fastcgi_intercept_errors on;
     include conf_m2/php_backend.conf;
     
     ## Enable Magento profiler
#    fastcgi_param   MAGE_PROFILER html;

     ## Store code with multi domain
#    fastcgi_param   MAGE_RUN_CODE $MAGE_RUN_CODE;
#    fastcgi_param   MAGE_RUN_TYPE $MAGE_RUN_TYPE;

     ## Enable POST logging in admin
#    if ($request_method = POST) {set $adminpost A;}
#    if ($request_uri ~* "/ADMIN_PLACEHOLDER/") {set $adminpost "${adminpost}B";}
#    if ($adminpost = AB) { access_log /var/log/nginx/admin_post.log adminpost;}
   }
	
   ## Block other undefined php files, possible injections and random malware hooks.
   location ~* \.php$ { 
     return 404; 
   }
  }
